// === Плагины ===

plugins {
    id 'java' // Поддержка Java
    id 'org.springframework.boot' version '3.5.3' // Spring Boot
    id 'io.spring.dependency-management' version '1.1.7' // Управление зависимостями
    id 'org.asciidoctor.jvm.convert' version '3.3.2' // Для генерации документации REST Docs
}

// === Настройки проекта ===

group = 'com.example'
version = '0.0.1-SNAPSHOT'

// Используем Java 21
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// === Настройки REST Docs (для генерации документации API) ===

ext {
    set('snippetsDir', file("build/generated-snippets")) // Папка для временных файлов документации
}

// === Репозитории ===

repositories {
    mavenCentral() // Основной репозиторий Maven
}

// === Зависимости ===

dependencies {

    // --- Основные ---
    implementation 'org.springframework.boot:spring-boot-starter-web' // REST API, контроллеры
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // JdbcTemplate, работа с БД без ORM

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'


    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.projectlombok:lombok:1.18.26'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // --- База данных ---
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL JDBC драйвер

    // --- Тестирование ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Основные тестовые библиотеки
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // Генерация документации API
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // Поддержка JUnit Jupiter


}

// === Конфигурация задач ===

tasks.named('test') {
    outputs.dir snippetsDir // Сохраняем сгенерированные фрагменты для документации
    useJUnitPlatform() // Используем JUnit 5
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir // Используем сниппеты из тестов
    dependsOn test // Выполняется после тестов
}